<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jing.settlement.model.dao.AuthorizationMapper">

	<!-- Result Map -->
	<resultMap id="AuthorizationResultMap" type="com.jing.settlement.model.entity.Authorization">
		<id column="authorization_id" property="authorizationId" />
		<result column="customer_id" property="customerId" />
		<result column="types" property="types" />
		<result column="device_id" property="deviceId" />
		<result column="status" property="status" />
		<result column="created_by" property="createdBy" />
		<result column="created_date" property="createdDate" />
		<result column="updated_by" property="updatedBy" />
		<result column="updated_date" property="updatedDate" />
	</resultMap>
	
	<resultMap id="AuthorizationVoResultMap" type="com.jing.settlement.model.entity.AuthorizationVo" extends="AuthorizationResultMap">
		<result column="customerName" property="customName" />
		<result column="typesName" property="typesName" />
		<result column="deviceName" property="deviceName" />
	</resultMap>
	
	<sql id="query_tables_Property" >
		<where>
			<if test="param.authorizationId != null and param.authorizationId != ''">
				and authorization_id = #{param.authorizationId}
			</if>
			<if test="param.customerId != null and param.customerId != ''">
				and customer_id = #{param.customerId}
			</if>
			<if test="param.types != null and param.types != ''">
				and types = #{param.types}
			</if>
			<if test="param.deviceId != null and param.deviceId != ''">
				and device_id = #{param.deviceId}
			</if>
			<if test="param.status != null and param.status != ''">
				and status = #{param.status}
			</if>
			<if test="param.createdBy != null and param.createdBy != ''">
				and created_by = #{param.createdBy}
			</if>
			<if test="param.createdDate != null and param.createdDate != ''">
				and created_date = #{param.createdDate}
			</if>
			<if test="param.updatedBy != null and param.updatedBy != ''">
				and updated_by = #{param.updatedBy}
			</if>
			<if test="param.updatedDate != null and param.updatedDate != ''">
				and updated_date = #{param.updatedDate}
			</if>
		</where>
	</sql>

	<!-- 添加 消费授权 -->
	<insert id="addAuthorization" parameterType="com.jing.settlement.model.entity.Authorization">
		INSERT INTO to_authorization (authorization_id ,customer_id ,types ,device_id ,status ,created_by ,created_date ,updated_by ,updated_date ) 
		values
		(#{authorizationId},#{customerId},#{types},#{deviceId},#{status},#{createdBy},#{createdDate},#{updatedBy},#{updatedDate})
	</insert>

	<!-- 修改消费授权 -->
	<update id="updateAuthorization" parameterType="com.jing.settlement.model.entity.Authorization">
		UPDATE to_authorization
		<set> 
			<if test="customerId != null" >
				customer_id = #{customerId},
			</if>
			<if test="types != null" >
				types = #{types},
			</if>
			<if test="deviceId != null" >
				device_id = #{deviceId},
			</if>
			<if test="status != null" >
				status = #{status},
			</if>
			<if test="createdBy != null" >
				created_by = #{createdBy},
			</if>
			<if test="createdDate != null" >
				created_date = #{createdDate},
			</if>
			<if test="updatedBy != null" >
				updated_by = #{updatedBy},
			</if>
			<if test="updatedDate != null" >
				updated_date = #{updatedDate},
			</if>
		</set>
		WHERE	authorization_id = #{authorizationId}
	</update>
	
	<!-- 根据ID删除消费授权 -->
	<delete id="deleteAuthorizationById"  parameterType="String">
		DELETE FROM to_authorization WHERE authorization_id = #{value}
	</delete>
	
	<!-- 根据ID查询消费授权 -->
	<select id="getAuthorizationById" resultMap="AuthorizationResultMap" parameterType="String">
		SELECT * FROM to_authorization WHERE authorization_id = #{value}
	</select>
	
	<select id="findAuthorizationListPage" resultMap="AuthorizationResultMap">
		SELECT * FROM to_authorization
		<include refid="query_tables_Property" />
	</select>
	
	<select id="findAuthorizationVoListPage" resultMap="AuthorizationVoResultMap">
		select a.*, c.customer_name as customerName, t.type_name as typesName,
		IFNULL((select room_name from tb_room where room_id = a.device_id) ,CONCAT('手牌-',(select strap_no from tb_strap where strap_id = a.device_id)) ) as deviceName
		from to_authorization a ,to_customer c , tb_types t
		where a.customer_id = c.customer_id
		and a.types = t.type_id
		<if test="param.customerId != null and param.customerId != ''">
			and a.customer_id = #{param.customerId}
		</if>
		<if test="param.status != null and param.status != ''">
			and a.status = #{param.status}
		</if>
	</select>
	
	<select id="findAuthorizationList" resultMap="AuthorizationResultMap">
		SELECT * FROM to_authorization
		<include refid="query_tables_Property" />
	</select>
	
</mapper>